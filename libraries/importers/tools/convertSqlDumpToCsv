#!/usr/bin/env python

# 
# Copyright Siemens AG, 2013-2015. Part of the SW360 Portal Project.
# 
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
# 

import sys
import shlex
import csv
import datetime
import codecs


def maybe_fix(element):
    element = element.strip().replace("'\"'\"'", "\\'")
    return element
    if element.startswith('CAST(') and element.endswith(')'):
        hex_string = element[7:15]
        hex_string = hex_string[6:8] + hex_string[4:6] + hex_string[2:4] + hex_string[0:2]
        value = int(hex_string, 16)
        date = datetime.date.fromtimestamp(value*60*24)
        date_strftime = date.strftime('%Y-%m-%d')
        print(element, 'as', hex_string, '=', value, '=>', date_strftime)
        return date_strftime
    else:
        return element


tables = {}

if len(sys.argv) != 2:
    raise Exception("expecting one argument for the sql dump file name")

file_name = sys.argv[1]

with codecs.open(file_name, 'r', 'utf-16-le') as input_file:
    statement = ''
    for line in input_file:
        line = line.strip() + '\n'
        line = line.replace("''", "'\"'\"'")

        statement += line

        try:
            token = shlex.split(statement)
        except ValueError:
            continue

        if token and token[0] == 'INSERT':
            statement = statement.strip()
            table = '.'.join([value[1:-1] for value in token[1].split('.')])

            (before, after) = statement.split(') VALUES (')
            columns = [column[1:-1] for column in before[len(token[0] + token[1]) + 3:].split(', ')]

            if table not in tables:
                tables[table] = {
                    'columns': columns,
                    'values': []
                }

            data_text = after[:-1].replace('\n', ' ').replace(' N\'', ' \'')
            if data_text[0] == 'N':
                data_text = data_text[1:]
            data = [element for element in csv.reader([data_text], delimiter=",")][0]

            data = [maybe_fix(element) for element in data]
            tables[table]['values'].append(data)

        statement = ''

for table_name, table_data in tables.items():
    with open(table_name + '.csv', 'w') as csv_file:
        csv_file.write(', '.join(["'" + column_name + "'" for column_name in table_data['columns']]) + '\n')
        for row in table_data['values']:
            csv_file.write(', '.join(row) + '\n')
